{ "name": "ampl",
  "scopeName": "source.ampl",
  "fileTypes": ["mod", "run", ".ampl"],
  "repository": {
    "general":  {
      "patterns":  [
        { "include": "#linecomment" },
        { "include": "#blockcomment" },
        { "include": "#singlequotestring" },
        { "include": "#doublequotestring" },
        { "include": "#number" },
        { "include": "#amploption" },
        { "name": "keyword.control.ampl", "match": "(?<!\\boption[ \t]+)\\bdisplay\\b" },
        { "include": "#keyword" },
        { "include": "#keywordlogical" },
        { "include": "#suffix" },
        { "include": "#math" },
        { "include": "#operator" },
        { "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b", "name": "variable.other.ampl" }
      ]
    },
    "amploption": {
      "name": "constant.language",
      "match": "(?<=\\boption[ \t]+)(display|display_1col|display_eps|display_max_2d_cols|display_precision|display_round|display_set_1col|display_transpose|display_width|gutter_width|omit_zero_cols|omit_zero_rows|csvdisplay_header|csvdisplay_precision|csvdisplay_restrict|csvdisplay_round|expand_precision|expand_round|format_range_errmsg|MD_precision|print_precision|print_round|print_separator|constraint_drop_tol|infeas_clear|presolve|presolve_assoc|presolve_eps|presolve_epsmax|presolve_fixeps|presolve_fixepsmax|presolve_inteps|presolve_intepsmax|presolve_logfile|presolve_warnings|project_fixed_vars|show_presolve_messages|var_bounds|auxfiles|(?:[a-zA-Z0-9_]+_)?auxfiles|dual_initial_guesses|linelim|nl_comments|nl_permute|outopt|output_precision|pl_bigM|pl_linearize|relax_integrality|reset_initial_guesses|send_statuses|send_suffixes|solver|substout|bad_subscripts|compl_warn|gentimes|show_stats|show_write_files|solver_msg|strict_ineq_warn|times|abs_boundtol|rel_boundtol|boundtol_max|show_boundtol|objective_precision|solution_precision|solution_round|allow_NaN|ampl_include|Cautions|cmdtrace|eexit|shell_exitcode_max|shell_exitignore|single_step|single_step_cmdno|solve_exitcode_max|stdin_offset|log_data|log_file|log_model|OPTIONS_IN|OPTIONS_INOUT|OPTIONS_OUT|shell_env_file|TMPDIR|AMPLFUNC|ampl_funclibs|ampl_libpath|libmap_32_64|load_funcdcl|cmdprompt1|cmdprompt2|dataprompt1|dataprompt2|insertprompt|prompt1|prompt2|convert_logical_to_algebraic|integer_markers|lazy|mpsfile_numwidth|outarg_warn|randparam_warn|randseed|table_debug|table_debug_template|table_errbreak|version|mp_options|gurobi_options|xpress_options|cplex_options|copt_options|cuopt_options|mosek_options|highs_options|scip_options|gcg_options|cbc_options|knitro_options|baron_options|snopt_options|loqo_options|minos_options|conopt_options|lgo_options|lindoglobal_options|octeract_options|raposa_options|ipopt_options|bonmin_options|couenne_options|ilogcp_options|kestrel_options)\\b"
    },
    
    "linecomment":  {
      "name": "comment.line.sharp.ampl",
      "match": "(#.*)(?!\\[\\[).*$\\n?",
      "captures": { "1": { "name": "punctuation.definition.comment.gms" } }
    },
    "blockcomment":  {
      "name": "comment.slashstar.ampl",
      "begin": "/\\*",
      "end": "\\*/",
      "contentName": "comment.block.documentation.ampl"
    },
    "singlequotestring":  {
      "name": "string.quoted.single.ampl",
      "begin": "'",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.ampl" }      },
      "end": "'",
      "endCaptures": { "0": { "name": "punctuation.definition.string.end.ampl" } },
      "patterns": [ { "match": "%(\\w+%|\\d+)", "name": "entity.name.class.ampl" } ]
    },
    "doublequotestring":  {
      "name": "string.quoted.double.ampl",
      "begin": "\"",
      "beginCaptures": { "0": { "name": "punctuation.definition.string.begin.ampl" } },
      "end": "\"",
      "endCaptures": { "0": { "name": "punctuation.definition.string.end.ampl" } },
      "patterns": [ { "match": "%(\\w+%|\\d+)", "name": "entity.name.class.ampl" } ]
    },
    "number":  {
      "name": "constant.numeric.ampl",
      "match": "\\b\\d+(\\.\\d+)?([eE]-?\\d+)?|\\.\\d+([eE]-?\\d+)?|(?i)\\b[+-]?infinity\\b"
    },
  "keyword": {
        "name": "keyword.control.ampl",
        "match": "(?<![\\w.])\\b(?:and|arc|binary|card|check|circular|close|coef|coeff|commands|cover|cross|data|default|dimen|dimension|drop|else|end|environ|first|fix|for|format|from|function|if|in|include|integer|last|let|maximize|member|minimize|max|min|model|net_in|net_out|next|nextw|node|not|obj|objective|option|or|ord|ord0|ordered|param|pipe|problem|prev|prevw|print|printf|product|prod|quit|repeat|reset|restore|reversed|set|shell|solution|solve|sovle|subject to|subj to|snapshot|solexpand|suffix|sum|symbolic|then|to|to_come|unfix|union|update|var|while|within|write)\\b"
      },
   "keywordlogical": {
        "name": "keyword.control.ampl",
        "match": "(?<![\\w.])\\b(?:count|atleast|atmost|exactly|forall|setof|exists|numberof|alldiff|complements)\\b"
      },
  "suffix": {
    "name": "support.function.builtin.ampl",
    "match": "\\.(?:[as]?status|defeqn|defvar|exitcode|message|result|lb[012s]?|ub[012s]?|[ul]?rc|val|init0?|body|dinit0?|[ul]?dual|[ul]?slack|suffix|slack|dual|rc|basis|message|exitcode)"
  },

 "math": {
    "name": "support.function.builtin.ampl",
    "match": "(?<!\\.)\\b(diff|difference|symdiff|inter|intersect|intersection|by|less|mod|ctime|time|div|abs|acos|acosh|alias|asin|asinh|atan|atan2|atanh|ceil|cos|exp|floor|log|log10|precision|round|sin|sinh|sqrt|tan|tanh|trunc|Beta|Cauchy|Exponential|Gamma|Irand224|Normal|Poisson|Uniform|Uniform01|match|num|num0|ichar|char|length|substr|sprintf|sub|gsub)\\b"
  },
    "operator": {
      "name": "keyword.operator.ampl",
      "match": "(\\+|-|\\*|\\/|\\*\\*|=|<=?|>=?|==|\\||\\^|<|>|!|\\.\\.|:=|&|!=|:|/|==>|<==|<==>|\\bor\\b|\\band\\b)"
    },
    "argumentcurly":  {
      "begin": "\\{",
      "patterns": [
          {
            "include": "#general"
          },
          {
            "name": "meta.function-call.arguments.ampl",
            "match": "."
          }
      ],
      "end": "\\}"
    },
    "argumentbracket":  {
      "begin": "\\[",
      "patterns": [
          {
            "include": "#general"
          },
          {

            "name": "meta.function-call.arguments.ampl",
            "match": "\\w"
          }
      ],
      "end": "\\]"
    },
    "indexing_set": {
      "name": "meta.indexing.ampl",
      "begin": "\\{",
      "beginCaptures": {
        "0": { "name": "punctuation.section.indexing.begin.ampl" }
      },
      "patterns": [
        {
          "match": "\\b(in)\\b",
          "name": "keyword.operator.set.ampl"
        },
        {
          "match": ",",
          "name": "punctuation.separator.indexing.ampl"
        },
        {
          "include": "#general"
        }
      ],
      "end": "\\}",
      "endCaptures": {
        "0": { "name": "punctuation.section.indexing.end.ampl" }
      }
    }

  
  },
  "patterns": [
      {
        "include": "#general"
      },
      {
        "include": "#argumentcurly"
      },
      {
        "include": "#argumentbracket"
      },
      {
        "include": "#indexing_set"
      }
  ],
  "uuid": "7224acbd-b663-4ec3-8a02-3e6cf1680446"
}

