{
	"name": "ampl-plugin-official",   
	"displayName": "AMPL (Official)",
	"publisher": "AMPLOptimizationInc",
	"description": "AMPL Language Support with Language Server",
	"version": "0.0.7",
	"engines": {
		"vscode": "^1.90.0"
	},
	"repository": {
			"type": "git",
			"url": "https://github.com/ampl/ampl-plugin-official.git"
	},

	"main": "./out/extension.js",
	"categories": [
		"Programming Languages"
	],
	"icon": "resources/logo.png",
	"contributes": {
		"languages": [
			{
				"id": "ampl",
				"aliases": ["AMPL"],
				"extensions": [".mod", ".run", ".ampl", ".inc"],
				"configuration": "./language-configuration.json"
			  },
			  {
				"id": "ampl-dat",
				"aliases": ["AMPL Data"],
				"extensions": [".dat"],
				"configuration": "./language-configuration.json"
			  }
		],
		"debuggers": [
			{
				"type": "amplProject",
				"label": "AMPL Project",
				"languages": [
					"ampl"
				],
				"configurationAttributes": {
					"launch": {
						"properties": {
							"fileList": {
								"type": "array",
								"description": "List of files to be parsed by the AMPL binary.",
								"items": {
									"type": "string",
									"description": "The path to a file"
								},
								"default": []
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "AMPL: define project",
						"description": "Run and parse a set of AMPL files with the AMPL binary",
						"body": {
							"name": "Project name",
							"type": "amplProject",
							"request": "launch",
							"fileList": [
								"${workspaceFolder}/examples/file1.ampl",
								"${workspaceFolder}/examples/file2.ampl"
							]
						}
					}
				]
			}
		],
		"iconThemes": [
			{
				"id": "ampl-icons",
				"label": "AMPL",
				"path": "./resources/ampl-icon-theme.json"
			}
		],
	"grammars": [
			{
			  "language": "ampl",
			  "scopeName": "source.ampl",
			  "path": "./syntaxes/ampl.tmLanguage.json"
			},
			{
			  "language": "ampl-dat",
			  "scopeName": "source.ampl.dat",
			  "path": "./syntaxes/ampl-dat.tmLanguage.json"
			}
		  ],
		"snippets": [
			{
				"language": "ampl",
				"path": "./snippets/ampl.json"
			}
		],
		"menus": {
			
			"explorer/context": [
				{
					"command": "AMPL.runFile",
					"title": "Send to AMPL",
					"when": "editorTextFocus && (editorLangId == ampl || editorLangId == ampl-dat)",
					"group": "ampl"
				}
			],
			"editor/context": [
				{
					"command": "AMPL.runFile",
					"title": "Send to AMPL",
					"when": "editorTextFocus && (editorLangId == ampl || editorLangId == ampl-dat)",
					"group": "ampl"
				},
				{
					"command": "AMPL.displayEntity",
					"title": "Display entity in AMPL",
					"when": "editorTextFocus && (editorLangId == ampl || editorLangId == ampl-dat)",
					"group": "ampl"
				},
				{
					"command" : "AMPL.lmconvert",
					"when": "editorTextFocus && editorLangId == python",
					"group": "ampl",
					"title" : "Convert to AMPL"
				}
			],
			"editor/title/run": [
				{
					"command": "AMPL.runFile",
					"group": "navigation",
					"when": "(editorLangId == ampl || editorLangId == ampl-dat)",
					"title": "Send to AMPL"
				}
			]
		},
		"terminal": {
			"profiles": [
				{
					"id": "AMPL.shell",
					"title": "AMPL"
				}
			]
		},
		"keybindings": [
			{
				"command": "AMPL.runFile",
				"key": "ctrl+shift+enter",
				"mac": "cmd+shift+enter",
				"when": "editorTextFocus && (editorLangId == ampl || editorLangId == ampl-dat)"
			},
			{

				"command": "AMPL.displayEntity",
				"key": "ctrl+shift+d",
				"mac" :"cmd+d",
				"when": "editorTextFocus && (editorLangId == ampl || editorLangId == ampl-dat)"
			},
			{
				"command": "AMPL.reset",
				"key": "ctrl+shift+r",
				"mac" :"cmd+shift+r",
				"when": "editorTextFocus && (editorLangId == ampl || editorLangId == ampl-dat)"
			},
			{
				"command": "AMPL.solve",
				"key": "ctrl+shift+l",
				"mac" :"cmd+shift+l",
				"when": "editorTextFocus && (editorLangId == ampl || editorLangId == ampl-dat)"
			}

		],
		"commands": [
		
			{
                "command": "AMPL.checkLanguageServerConfiguration",
                "title": "Check Language Server Configuration"
            },
            {
                "command": "AMPL.autotedectJava",
                "title": "Autodetect Java Runtime"
            },
            {
                "command": "AMPL.selectJavaFolder",
                "title": "Select Java Folder"
            },
				{
					"command": "AMPL.lmconvert",
					"title": "Convert to AMPL",
					"icon": "$(comment)"
				},
			{
				"command": "AMPL.selectConfiguration",
				"title": "AMPL: Select launch configuration",
				"when": "onContext:AMPL.enableBetaCommands",
				"enablement": "AMPL.enableBetaCommands"
			},
			{
				"command": "AMPL.selectFilesToParse",
				"title": "AMPL: Select files to parse",
				"enablement": "AMPL.enableBetaCommands"
			},
			{
				"command": "AMPL.displayEntity",
				"title": "AMPL: display entity"
			},
			{
				"command": "AMPL.openConsole",
				"title": "AMPL: open console"
			},
			{
				"command": "AMPL.runFile",
				"title": "AMPL: run file",
				"icon": "$(play)"
			},
			{
				"command": "AMPL.solve",
				"title": "AMPL: solve",
				"icon": "$(play)",
				"shortTitle": "Solve"
			},
			{
				"command": "AMPL.reset",
				"title": "AMPL: reset",
				"icon": "$(trash)",
				"shortTitle": "Reset"
			}
		],
"configuration": [
	{
		"title": "AMPL › Runtime",
		"properties": {
		  "AMPL.Runtime.pathToAMPLbinary": {
			"type": "string",
			"default": "",
			"description": "Path to the AMPL binary. If empty, the extension will look for it in system paths.",
			"title": "Path to AMPL Binary"
		  },
		  "AMPL.Runtime.pathToJRE": {
			"type": "string",
			"default": "",
			"description": "Path to the Java Runtime Environment (min Java 11). If empty, the extension will look in the environment variable JAVA_HOME and then in the system paths.",
			"title": "Path to JRE",
			"markdownDescription": "Path to the Java Runtime Environment (min Java 11). If empty, the extension will look in the environment variable JAVA_HOME and then in the system paths.\n\n- [Check Configuration](command:AMPL.checkLanguageServerConfiguration)\n- [Autodetect Java](command:AMPL.autotedectJava)\n- [Select Java Folder](command:AMPL.selectJavaFolder)"
		  },
		  "AMPL.Runtime.changeDirectoryOnRun": {
			"type": "boolean",
			"default": true,
			"description": "Change the working directory of AMPL to the directory of the file being run."
		  }
		}
	  },

  	{
    "title": "AMPL › Language server",
    "properties": {
      "AMPL.LanguageServer.enableLanguageServer": {
        "type": "boolean",
        "default": true,
        "description": "Enable or disable the language server for AMPL files."
      },
      "AMPL.LanguageServer.trace.server": {
        "type": "string",
        "enum": ["off", "messages", "verbose"],
        "default": "off",
        "description": "Trace the communication between VS Code and the AMPL language server."
      },
	  "AMPL.LanguageServer.diagnosticsEnabled": {
        "type": "boolean",
        "default": true,
        "description": "Enable or disable error highlighting for AMPL files. Requires the language server."
      }
    }
  },


  {
    "title": "AMPL › Advanced",
    "properties": {

      "AMPL.Advanced.enablePsuedoTerminal": {
        "type": "boolean",
        "default": false,
        "description": "Enable or disable the advanced pseudoterminal. Has more features but can be unstable."
      },
      "AMPL.Advanced.enableAdvancedCommands": {
        "type": "boolean",
        "default": false,
        "description": "Enable advanced and beta features like custom configuration and file selection commands."
      }
    }
  }
  
]

	},
	"dependencies": {
		"jsonc-parser": "^3.3.1",
		"vscode-languageclient": "9.0.1"
	},
	"scripts": {
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/mocha": "^10.0.8",
		"@types/node": "22.x",
		"@types/vscode": "^1.90.0",
		"@typescript-eslint/eslint-plugin": "^8.5.0",
		"@typescript-eslint/parser": "^8.5.0",
		"@vscode/test-electron": "^2.4.1",
		"@vscode/vsce": "^3.1.0",
		"eslint": "^9.10.0",
		"mocha": "^10.7.3",
		"path": "0.12.7",
		"typescript": "^5.6.2",
		"yarn": "1.22.22"
	}
}
